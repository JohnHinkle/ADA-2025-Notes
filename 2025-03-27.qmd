---
title: "2025-03-27"
author: "John Hinkle"
format: html
editor: visual
---

## Challenge 1

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
library(tidyverse)
library(ggplot2)
d <- read_csv("https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/AVONETdataset1.csv")
```

```{r}
d <- d |> mutate(Migration = as.factor(Migration))

ggplot(data = d |> drop_na(Trophic.Level), aes(x = Trophic.Level, y = log(Mass))) +
  geom_boxplot() +
  geom_jitter()

ggplot(data = d |> drop_na(Migration), 
       aes(x = Migration, y = log(Mass))) +
  geom_boxplot() +
  geom_jitter(alpha = 0.5)
```

```{r}
# Linear models
m1 <- lm(log(Mass) ~ Trophic.Level, data = d)
summary(m1) # body mass is not significantly different between carnivores and herbivores

m2 <- lm(log(Mass) ~ Migration, data = d)
summary(m2)
```

```{r}
# post-hoc Tukey test
m1aov <- aov(log(Mass) ~ Migration, data = d)
(posthoc <- TukeyHSD(m1aov, which = "Migration", conf.level = 0.95))
```

```{r}
library(infer)

d <- d |> mutate(logMass = log(Mass))

original.F <- aov(logMass ~ Trophic.Level, data = d) |>
  broom::tidy() |>
  filter(term == "Trophic.Level")

permuted.F <- d |>
  specify(logMass ~ Trophic.Level) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  calculate(stat = "F")
```

## Challenge 2

```{r}
library(cowplot)

m3 <- lm(log(Beak.Length_Culmen) ~ logMass, data = d)
m4 <- lm(log(Tarsus.Length) ~ logMass, data = d)

d <- d |> mutate(RelativeBeakLength = m3$residuals) |> 
  mutate(RelativeTarsusLength = m4$residuals)

box1 <- ggplot(data = d, aes(x = Trophic.Niche, y = RelativeBeakLength)) +
  geom_boxplot(color = "dodgerblue4") +
  theme(axis.text.x = element_text(angle = 45, hjust=1))

box2 <- ggplot(data = d, aes(x = Primary.Lifestyle, y = RelativeTarsusLength)) +
  geom_boxplot(color = "dodgerblue4") +
  theme(axis.text.x = element_text(angle = 45, hjust=1))

plot_grid(box1, box2, nrow = 1)
```

```{r}
migration <- d |> 
  drop_na(Migration) |>
  mutate(logRS = log(Range.Size))

hist(migration$Range.Size)
hist(migration$logRS)

m5 <- lm(logRS ~ Migration, data = migration)
summary(m5)

aov <- aov(logRS ~ Migration, data = migration)
summary(aov)
```

```{r}
songbirds <- d |> filter(Order1 == "Passeriformes")

box1 <- ggplot(data = songbirds, aes(x = Primary.Lifestyle, y = RelativeBeakLength)) +
  geom_boxplot() +
  geom_jitter(alpha = 0.05) +
  theme(axis.text.x = element_text(angle = 45, hjust=1))

box2 <- ggplot(data = songbirds, aes(x = Primary.Lifestyle, y = RelativeTarsusLength)) +
  geom_boxplot() +
  geom_jitter(alpha = 0.05) +
  theme(axis.text.x = element_text(angle = 45, hjust=1))

plot_grid(box1, box2, nrow = 1)

m6 <- lm(RelativeBeakLength ~ Primary.Lifestyle, data = songbirds)
summary(m6)

m7 <- lm(RelativeTarsusLength ~ Primary.Lifestyle, data = songbirds)
summary(m7)
```

```{r}
# Two-factor
m8 <- lm(RelativeBeakLength ~ Primary.Lifestyle + Trophic.Level, data = songbirds)
summary(m8)
```

```{r}
m9 <- lm(RelativeBeakLength ~ Primary.Lifestyle + Trophic.Level + Primary.Lifestyle:Trophic.Level, data = songbirds)
summary(m9)
```

```{r}
# Equivalent to m9
m10 <- lm(RelativeBeakLength ~ Primary.Lifestyle + Primary.Lifestyle*Trophic.Level, data = songbirds)
summary(m10)
```

## Beyond the exercise
```{r}
library(car)
library(jtools)

z <- read_csv("https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/zombies.csv", col_names = TRUE)

```

```{r}

```

```{r}

```
