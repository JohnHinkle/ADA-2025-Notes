---
title: "2025-03-04"
author: "John Hinkle"
format: html
editor: visual
self-contained: true
---

## Load data

```{r}
library(tidyverse)
f <- "https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/tbs-2006-2008-ranges.csv"
d <- read_csv(f, col_names = TRUE)
```

## Declare null hypothesis

```{r}
library(infer)
d <- d |> specify(formula = kernel95 ~ sex) # ID variables of interest
d <- d |> hypothesize(null = "independence") # null hypothesis
```

## Permutation

```{r}
perm <- d |> generate(reps = 1000, type = "permute")
perm <- perm |> calculate(stat = "diff in means", order = c("M", "F"))
visualize(perm, bins = 20)
```

## Calculate observed test statistic

```{r}
obs <- d |>
specify(kernel95 ~ sex) |>
calculate(stat = "diff in means", order = c("M", "F"))
```

## Plot observed test statistic relative to permutation distribution

```{r}
visualize(perm, bins = 20) +
  shade_p_value(obs, direction = "both")
get_p_value(perm, obs_stat = obs, direction = "both")
```

# Regression

## Load packages

```{r}
library(tidyverse)
library(manipulate)
library(patchwork)
f <- "https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/zombies.csv"
d <- read_csv(f, col_names = TRUE)
```

## Plot

```{r}
library(ggplot2)
plot <- ggplot(d, aes(x = weight, y = height)) +
  geom_point(color = "#bf5700")
plot
```

## Calculating co-variance (manually)

```{r}
h <- d$height - mean(d$height)
w <- d$weight - mean(d$weight)
covariance <- sum(h*w)/(length(d$height)-1)
covariance
```

## Using the 'cov()' function

```{r}
cov(d$height, d$weight)
```

## Calculating correlation coefficent

```{r}
correlation <- covariance/(sd(d$height)*sd(d$weight))
correlation
cor(d$height, d$weight)
```

## Center variables

```{r}
d <- mutate(d, centered_height = height - mean(height))
d <- mutate(d, centered_weight = weight - mean(weight))
```

## Slope test function

```{r}
slope.test <- function(beta1, data) {
    g <- ggplot(data = data, aes(x = centered_weight, y = centered_height))
    g <- g + geom_point()
    g <- g + geom_abline(intercept = 0, slope = beta1, size = 1, colour = "blue",
        alpha = 1/2)
    ols <- sum((data$centered_height - beta1 * data$centered_weight)^2)
    g <- g + ggtitle(paste("Slope = ", beta1, "\nSum of Squared Deviations = ", round(ols,
        3)))
    g
}
```

## Manipulate

```{r}
manipulate(slope.test(beta1, data = d), beta1 = slider(-1, 1, initial = 0, step = 0.005))
```

## Beta coefficents

```{r}
print(beta1 <- cov(d$height, d$weight) / var(d$weight)) # slope
print(beta0 <- mean(d$height) - beta1*mean(d$weight)) # y-intercept
```

## Linear model

Degrees of freedom = n - \# of variables being predicted

```{r}
m <- lm(height~weight, data=d)
summary(m)
```

```{r}
m$coefficients
head(m$fitted.values)
head(m$residuals) # residuals should be normally distributed, otherwise you should transform data or use a different regression

hist(m$residuals)
```

## Table of statistics

```{r}
broom::tidy(m) # tidy() function from broom package
```

## Calculate CIs for beta estimates (intercept and slope)

```{r}
confint(m)
pt(47.49, df = 998, lower.tail = FALSE) +
  pt(-47.49, df = 998, lower.tail = TRUE)
```

## Plots

```{r}
print(plot(m, col = "#bf5700"))
```

## Model 2 regression

```{r}
library(lmodel2)
m2 <- lmodel2(height~weight, data=d,
              range.y="relative", range.x="relative",
              nperm=1000)
m2
```

## text

```{r}

```

## text

```{r}

```
